:root {
    --color-primary: rgb(59, 59, 59);
    /*deklaracje zmiennych*/
    --color-secondary: rgb(39, 40, 46);
    --color-white: rgb(255, 255, 255);
    --color-blue: rgb(0, 119, 255);
    --color-black: rgb(0, 0, 0);
}

body {
    margin: 0;
    padding: 0;
    background-color: var(--color-primary);
    /*wykorzystanie zmiennej*/
    color: var(--color-white);
}

.container__header {
    background-color: var(--color-secondary);
    /*przyklejenie do góry przeglądarki elementu tak, że po scrolowaniu jest on nadal na górze*/
    position: fixed;
    /*dodanie umiejscowienia*/
    top: 0;
    /*dodanie umiejscowienia*/
    left: 0;
    height: 60px;
    width: 100%;
    display: flex;
    /*góra dół y*/
    align-items: center;
    /*lewo prawo x*/
    justify-content: end;
    /*padding top i bottom, left i right*/
    /*padding: 0, 18px;* przy dodaniu flexa nie nada nam się padding, dodaj margin right w elemencie podrzędnym*/
}

.container__content {
    /*bez paddingu = height header czyli 60px content będzie nachodził na header - jeden na drugim*/
    padding-top: 78px;
    padding-left: 18px;
    padding-right: 18px;
    /* height: 1500px; */
    /*będziemy zawartość content ustawiać dzięki flex*/
    display: flex;
    flex-wrap: wrap;
    gap: 18px;
    justify-content: space-evenly;
}

.container__content__item {
    flex-basis: 350px;
    height: 220px;
    border-radius: 4px;
    background-color: var(--color-blue);
}

.container__content__image {
    height: 190px;
    width: 100%;
    background-image: url('./images/ocean.jpg');
    /*najlepsze rozwiązanie żeby wypełnić cały div obrazem, nie pojawi się repeat ani czarne paski, zdjęcie może być trochę ucinane*/
    background-size: cover;
    background-position: center;
    border-radius: 4px 4px 0 0;
}

.container__content__description {
    padding-top: 6px;
    text-align: center;
    font-size: small;
}

.container__header--avatar {
    border-radius: 50%;
    /*zdjęcie jest przezroczyste - png więc background color będzie widoczny*/
    background-color: var(--color-blue);
    margin-right: 18px;
}

.container__menu {
    background-color: var(--color-secondary);
    width: 250px;
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 25px;
    /*przyklejanie menu stick*/
    position: fixed;
    top: 0;
    /*schowanie menu za obszar roboczy, 250px bo mamy width na 250px */
    left: -250px;
    transition: 0.5s ease-in-out;
}

.container__menu ul {
    padding: 0;
    list-style-type: none;
}

.container__menu ul li {
    padding: 5px 0;
}


/*klasa nadpisująca parametr left klasy container__menu, który wynosi left:-250px*/

.container__menu.open {
    left: 0px;
    /*przy otwieraniu menu delikatne slow motion*/
    transition: 0.5s ease-in-out;
}

a {
    /*dzidzicznie koloru po rodzicu */
    color: inherit;
    text-decoration: none;
}

.container__hamburger {
    /* z-index: 1; */
    height: 24px;
    width: 24px;
    /*tutaj już nie użyjemy flex do pozycjonowania, musimy to nadać ręcznie*/
    position: fixed;
    top: 18px;
    left: 18px;
    /*usuwanie koloru*/
    background-color: transparent;
    border: 0;
    /*dodanie paska do hamburgera 1 z 3*/
    border-bottom: 4px solid var(--color-white);
    transition: 0.5s ease-in-out;
}


/*after i before służą do dodania czegoś ekstra do głównej klasy czyli w tym przypadku .container__hamburger
czyli jak mamy <button class="container__hamburger">X</button> w nim X
to dodanie 

.container__hamburger::before {
    content: 'before';
    color: white;
}

.container__hamburger::after {
    content: 'after';
    color: white;
}

da wynik beforeXafter czyli dodaliśmy do X before i after

*/

.container__hamburger::before,
.container__hamburger::after {
    content: '';
    background-color: var(--color-white);
    width: 100%;
    height: 4px;
    /*aby zadziałała pozycja absolutna na rodzicu musimy mieć relative, fixed, absolute, rodzicem jest .container__hamburger więc mamy fixed*/
    position: absolute;
    top: 0;
    left: 0;
}

.container__hamburger::before {
    /*paski są na tej samej wysokości więc musimy before lub after przesunąć względem siebie */
    top: 10px;
}

.container__hamburger.open {
    left: 268px;
    /*przy otwieraniu menu delikatne slow motion*/
    transition: 0.5s ease-in-out;
}

@media screen and (min-width: 576px) {
    .container__menu {
        left: 0;
        transition: none;
    }
    /*usuwanie elementu usuwanie klasy*/
    .container__hamburger {
        display: none;
    }
    .container__content {
        margin-left: 250px;
    }
}